{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the TimelyGator Server API.",
        "title": "TimelyGator Server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/timelygator/timelygator"
        },
        "license": {
            "name": "GPLv3",
            "url": "https://github.com/timelygator/TimelyGator/blob/main/LICENSE"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/v1/buckets": {
            "get": {
                "description": "Retrieves a list of all buckets in the system. Each bucket represents a collection\nof related events and contains metadata about the tracking session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "List all buckets",
                "responses": {
                    "200": {
                        "description": "List of buckets retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Bucket"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}": {
            "get": {
                "description": "Endpoint for creating, retrieving, updating, and deleting buckets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Manage bucket operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique identifier for the bucket",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force deletion flag (required for DELETE unless in testing mode)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bucket"
                        }
                    },
                    "204": {
                        "description": "No content (for successful updates)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Bucket not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Endpoint for creating, retrieving, updating, and deleting buckets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Manage bucket operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique identifier for the bucket",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force deletion flag (required for DELETE unless in testing mode)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bucket"
                        }
                    },
                    "204": {
                        "description": "No content (for successful updates)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Bucket not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Endpoint for creating, retrieving, updating, and deleting buckets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Manage bucket operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique identifier for the bucket",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force deletion flag (required for DELETE unless in testing mode)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bucket"
                        }
                    },
                    "204": {
                        "description": "No content (for successful updates)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Bucket not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Endpoint for creating, retrieving, updating, and deleting buckets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Manage bucket operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique identifier for the bucket",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force deletion flag (required for DELETE unless in testing mode)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bucket"
                        }
                    },
                    "204": {
                        "description": "No content (for successful updates)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Bucket not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/events": {
            "get": {
                "description": "Endpoint for creating and retrieving events associated with a specific bucket.\nEvents represent individual time-tracking entries or activities.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Manage events within a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the bucket containing the events",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of events to return (for GET)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time in ISO8601 format (for GET)",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in ISO8601 format (for GET)",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "description": "Event object or array of event objects (for POST)",
                        "name": "event",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events retrieved/created successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Bucket not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Endpoint for creating and retrieving events associated with a specific bucket.\nEvents represent individual time-tracking entries or activities.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Manage events within a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the bucket containing the events",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of events to return (for GET)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time in ISO8601 format (for GET)",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in ISO8601 format (for GET)",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "description": "Event object or array of event objects (for POST)",
                        "name": "event",
                        "in": "body",
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events retrieved/created successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "201": {
                        "description": "Event created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Bucket not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/events/count": {
            "get": {
                "description": "Retrieve the count of events for a specific bucket within an optional time range.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event count for a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time in ISO8601 format",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in ISO8601 format",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/events/{event_id}": {
            "get": {
                "description": "Retrieve a specific event from a bucket by its ID.\nDelete a specific event from a bucket by its ID.",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "events",
                    "events"
                ],
                "summary": "Delete a single event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Retrieve a specific event from a bucket by its ID.\nDelete a specific event from a bucket by its ID.",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "events",
                    "events"
                ],
                "summary": "Delete a single event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/export": {
            "get": {
                "description": "Export a specific bucket and its data as a JSON attachment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "export-import"
                ],
                "summary": "Export a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "attachment",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/heartbeat": {
            "post": {
                "description": "Updates or creates an event in the specified bucket to indicate active status.\nIf an existing event is found within the pulsetime window, it will be updated\ninstead of creating a new event.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Send bucket heartbeat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the bucket to send heartbeat to",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Time window in seconds to merge events",
                        "name": "pulsetime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Event data to record",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Heartbeat recorded successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Concurrent heartbeat operation in progress",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/export": {
            "get": {
                "description": "Exports all buckets and their associated events as a JSON file attachment.\nThe exported data can be used for backup or migration purposes.",
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "export-import"
                ],
                "summary": "Export all bucket data",
                "responses": {
                    "200": {
                        "description": "JSON file containing all bucket data",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/import": {
            "post": {
                "description": "Import buckets and their data from a JSON payload, either as request body or multipart form.",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "tags": [
                    "export-import"
                ],
                "summary": "Import all buckets",
                "parameters": [
                    {
                        "description": "Import payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ImportPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/info": {
            "get": {
                "description": "Returns detailed information about the TimelyGator server instance including version,\nbuild time, and other deployment-specific configuration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get server information",
                "responses": {
                    "200": {
                        "description": "Server information retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Bucket": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "bucket_id": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "duration": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "types.ImportPayload": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        }
    }
}