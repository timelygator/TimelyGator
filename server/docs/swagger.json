{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the TimelyGator Server API.",
        "title": "TimelyGator Server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/timelygator/timelygator"
        },
        "license": {
            "name": "GPLv3",
            "url": "https://github.com/timelygator/TimelyGator/blob/main/LICENSE"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/v1/buckets/": {
            "get": {
                "description": "Retrieve a list of all buckets.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Get all buckets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Bucket"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}": {
            "get": {
                "description": "Retrieve metadata for a specific bucket.\nCreate a new bucket with the given ID and metadata.\nUpdate metadata for a specific bucket.\nDelete a specific bucket. Requires force=1 query parameter unless testing.",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets",
                    "buckets",
                    "buckets",
                    "buckets"
                ],
                "summary": "Delete a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket creation payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketCreationPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket update payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketUpdatePayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete (required unless testing)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Retrieve metadata for a specific bucket.\nCreate a new bucket with the given ID and metadata.\nUpdate metadata for a specific bucket.\nDelete a specific bucket. Requires force=1 query parameter unless testing.",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets",
                    "buckets",
                    "buckets",
                    "buckets"
                ],
                "summary": "Delete a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket creation payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketCreationPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket update payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketUpdatePayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete (required unless testing)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Retrieve metadata for a specific bucket.\nCreate a new bucket with the given ID and metadata.\nUpdate metadata for a specific bucket.\nDelete a specific bucket. Requires force=1 query parameter unless testing.",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets",
                    "buckets",
                    "buckets",
                    "buckets"
                ],
                "summary": "Delete a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket creation payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketCreationPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket update payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketUpdatePayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete (required unless testing)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Retrieve metadata for a specific bucket.\nCreate a new bucket with the given ID and metadata.\nUpdate metadata for a specific bucket.\nDelete a specific bucket. Requires force=1 query parameter unless testing.",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets",
                    "buckets",
                    "buckets",
                    "buckets"
                ],
                "summary": "Delete a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket creation payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketCreationPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bucket update payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BucketUpdatePayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete (required unless testing)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/events": {
            "get": {
                "description": "Retrieve events for a specific bucket, optionally with limit and time range.\nCreate one or more events in a specific bucket. Accepts single event object or array of event objects.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events",
                    "events"
                ],
                "summary": "Create events for a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of events returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time in ISO8601 format",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in ISO8601 format",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event payload (single event object or array of event objects)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Retrieve events for a specific bucket, optionally with limit and time range.\nCreate one or more events in a specific bucket. Accepts single event object or array of event objects.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events",
                    "events"
                ],
                "summary": "Create events for a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of events returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time in ISO8601 format",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in ISO8601 format",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event payload (single event object or array of event objects)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/events/count": {
            "get": {
                "description": "Retrieve the count of events for a specific bucket within an optional time range.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event count for a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time in ISO8601 format",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in ISO8601 format",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/events/{event_id}": {
            "get": {
                "description": "Retrieve a specific event from a bucket by its ID.\nDelete a specific event from a bucket by its ID.",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "events",
                    "events"
                ],
                "summary": "Delete a single event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Retrieve a specific event from a bucket by its ID.\nDelete a specific event from a bucket by its ID.",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "events",
                    "events"
                ],
                "summary": "Delete a single event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucket_id}/export": {
            "get": {
                "description": "Export a specific bucket and its data as a JSON attachment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "export-import"
                ],
                "summary": "Export a bucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "bucket_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "attachment",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/export": {
            "get": {
                "description": "Export all buckets and their data as a JSON attachment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "export-import"
                ],
                "summary": "Export all buckets",
                "responses": {
                    "200": {
                        "description": "attachment",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/import": {
            "post": {
                "description": "Import buckets and their data from a JSON payload, either as request body or multipart form.",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "tags": [
                    "export-import"
                ],
                "summary": "Import all buckets",
                "parameters": [
                    {
                        "description": "Import payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ImportPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/info": {
            "get": {
                "description": "Get information about the server, such as version and build time.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Get server info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Bucket": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "bucket_id": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "duration": {
                    "$ref": "#/definitions/time.Duration"
                },
                "id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "types.BucketCreationPayload": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.BucketUpdatePayload": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "hostname": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.ImportPayload": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        }
    }
}