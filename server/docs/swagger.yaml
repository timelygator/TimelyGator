basePath: /api/v1
definitions:
  models.Bucket:
    properties:
      client:
        type: string
      created:
        type: string
      data:
        items:
          type: integer
        type: array
      hostname:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  models.Event:
    properties:
      bucket_id:
        type: string
      data:
        items:
          type: integer
        type: array
      duration:
        type: number
      id:
        type: integer
      timestamp:
        type: string
    type: object
  types.ImportPayload:
    properties:
      buckets:
        additionalProperties: true
        type: object
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://github.com/timelygator/timelygator
  description: This is the API documentation for the TimelyGator Server API.
  license:
    name: GPLv3
    url: https://github.com/timelygator/TimelyGator/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: TimelyGator Server API
  version: "0.1"
paths:
  /v1/buckets:
    get:
      consumes:
      - application/json
      description: |-
        Retrieves a list of all buckets in the system. Each bucket represents a collection
        of related events and contains metadata about the tracking session.
      produces:
      - application/json
      responses:
        "200":
          description: List of buckets retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Bucket'
            type: array
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: List all buckets
      tags:
      - buckets
  /v1/buckets/{bucket_id}:
    delete:
      consumes:
      - application/json
      description: Endpoint for creating, retrieving, updating, and deleting buckets
      parameters:
      - description: Unique identifier for the bucket
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Force deletion flag (required for DELETE unless in testing mode)
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation completed successfully
          schema:
            $ref: '#/definitions/models.Bucket'
        "204":
          description: No content (for successful updates)
          schema:
            type: string
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Bucket not found
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Manage bucket operations
      tags:
      - buckets
    get:
      consumes:
      - application/json
      description: Endpoint for creating, retrieving, updating, and deleting buckets
      parameters:
      - description: Unique identifier for the bucket
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Force deletion flag (required for DELETE unless in testing mode)
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation completed successfully
          schema:
            $ref: '#/definitions/models.Bucket'
        "204":
          description: No content (for successful updates)
          schema:
            type: string
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Bucket not found
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Manage bucket operations
      tags:
      - buckets
    post:
      consumes:
      - application/json
      description: Endpoint for creating, retrieving, updating, and deleting buckets
      parameters:
      - description: Unique identifier for the bucket
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Force deletion flag (required for DELETE unless in testing mode)
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation completed successfully
          schema:
            $ref: '#/definitions/models.Bucket'
        "204":
          description: No content (for successful updates)
          schema:
            type: string
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Bucket not found
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Manage bucket operations
      tags:
      - buckets
    put:
      consumes:
      - application/json
      description: Endpoint for creating, retrieving, updating, and deleting buckets
      parameters:
      - description: Unique identifier for the bucket
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Force deletion flag (required for DELETE unless in testing mode)
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Operation completed successfully
          schema:
            $ref: '#/definitions/models.Bucket'
        "204":
          description: No content (for successful updates)
          schema:
            type: string
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Bucket not found
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Manage bucket operations
      tags:
      - buckets
  /v1/buckets/{bucket_id}/events:
    get:
      consumes:
      - application/json
      description: |-
        Endpoint for creating and retrieving events associated with a specific bucket.
        Events represent individual time-tracking entries or activities.
      parameters:
      - description: ID of the bucket containing the events
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Maximum number of events to return (for GET)
        in: query
        name: limit
        type: integer
      - description: Start time in ISO8601 format (for GET)
        in: query
        name: start
        type: string
      - description: End time in ISO8601 format (for GET)
        in: query
        name: end
        type: string
      - description: Event object or array of event objects (for POST)
        in: body
        name: event
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Events retrieved/created successfully
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "201":
          description: Event created successfully
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Bucket not found
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Manage events within a bucket
      tags:
      - events
    post:
      consumes:
      - application/json
      description: |-
        Endpoint for creating and retrieving events associated with a specific bucket.
        Events represent individual time-tracking entries or activities.
      parameters:
      - description: ID of the bucket containing the events
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Maximum number of events to return (for GET)
        in: query
        name: limit
        type: integer
      - description: Start time in ISO8601 format (for GET)
        in: query
        name: start
        type: string
      - description: End time in ISO8601 format (for GET)
        in: query
        name: end
        type: string
      - description: Event object or array of event objects (for POST)
        in: body
        name: event
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Events retrieved/created successfully
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "201":
          description: Event created successfully
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Bucket not found
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Manage events within a bucket
      tags:
      - events
  /v1/buckets/{bucket_id}/events/{event_id}:
    delete:
      description: |-
        Retrieve a specific event from a bucket by its ID.
        Delete a specific event from a bucket by its ID.
      parameters:
      - description: Bucket ID
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: Bucket ID
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a single event
      tags:
      - events
      - events
    get:
      description: |-
        Retrieve a specific event from a bucket by its ID.
        Delete a specific event from a bucket by its ID.
      parameters:
      - description: Bucket ID
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: Bucket ID
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a single event
      tags:
      - events
      - events
  /v1/buckets/{bucket_id}/events/count:
    get:
      description: Retrieve the count of events for a specific bucket within an optional
        time range.
      parameters:
      - description: Bucket ID
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Start time in ISO8601 format
        in: query
        name: start
        type: string
      - description: End time in ISO8601 format
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get event count for a bucket
      tags:
      - events
  /v1/buckets/{bucket_id}/export:
    get:
      description: Export a specific bucket and its data as a JSON attachment.
      parameters:
      - description: Bucket ID
        in: path
        name: bucket_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: attachment
          schema:
            type: file
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Export a bucket
      tags:
      - export-import
  /v1/buckets/{bucket_id}/heartbeat:
    post:
      consumes:
      - application/json
      description: |-
        Updates or creates an event in the specified bucket to indicate active status.
        If an existing event is found within the pulsetime window, it will be updated
        instead of creating a new event.
      parameters:
      - description: ID of the bucket to send heartbeat to
        in: path
        name: bucket_id
        required: true
        type: string
      - description: Time window in seconds to merge events
        in: query
        name: pulsetime
        required: true
        type: number
      - description: Event data to record
        in: body
        name: event
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Heartbeat recorded successfully
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Missing or invalid parameters
          schema:
            type: string
        "409":
          description: Concurrent heartbeat operation in progress
          schema:
            type: string
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Send bucket heartbeat
      tags:
      - events
  /v1/export:
    get:
      description: |-
        Exports all buckets and their associated events as a JSON file attachment.
        The exported data can be used for backup or migration purposes.
      produces:
      - application/json
      - application/octet-stream
      responses:
        "200":
          description: JSON file containing all bucket data
          schema:
            type: file
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Export all bucket data
      tags:
      - export-import
  /v1/import:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: Import buckets and their data from a JSON payload, either as request
        body or multipart form.
      parameters:
      - description: Import payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ImportPayload'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Import all buckets
      tags:
      - export-import
  /v1/info:
    get:
      consumes:
      - application/json
      description: |-
        Returns detailed information about the TimelyGator server instance including version,
        build time, and other deployment-specific configuration.
      produces:
      - application/json
      responses:
        "200":
          description: Server information retrieved successfully
          schema:
            items:
              type: integer
            type: array
        "500":
          description: Internal server error occurred
          schema:
            type: string
      summary: Get server information
      tags:
      - system
swagger: "2.0"
